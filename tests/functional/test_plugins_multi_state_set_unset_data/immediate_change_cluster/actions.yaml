# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
- hosts: all
  gather_facts: false
  connection: local
  vars:
    new: &new "wow"

  tasks:
    # cluster
    - name: "Check value before change"
      fail:
        msg: "Expected value should not contain {{ new }}"
      when: "{{ new in cluster.multi_state }}"
      tags:
        - cluster-prepare

    - adcm_multi_state_set:
        type: "cluster"
        state: *new
      tags:
        - cluster-prepare

    - name: "Check value after change"
      fail:
        msg: "Expected value {{ new }} in {{ cluster.multi_state }}"
      when: "{{ new not in cluster.multi_state }}"
      tags:
        - cluster-check

    - adcm_multi_state_unset:
        type: "cluster"
        state: *new
      tags:
        - cluster-undo

    - name: "Check after unset"
      fail:
        msg: "Expected value {{ new }} not in {{ cluster.multi_state }}"
      when: "{{ new in cluster.multi_state }}"
      tags:
        - cluster-check-again

    # service
    - name: "Check value before change"
      fail:
        msg: "Expected value should not contain {{ new }}"
      when: "{{ new in services.test_service.multi_state }}"
      tags:
        - service-prepare

    - adcm_multi_state_set:
        type: "service"
        state: *new
      tags:
        - service-prepare

    - name: "Check after change"
      fail:
        msg: "Expected value {{ new }} in {{ services.test_service.multi_state }}"
      when: "{{ new not in services.test_service.multi_state }}"
      tags:
        - service-check

    - adcm_multi_state_unset:
        type: "service"
        state: *new
      tags:
        - service-undo

    - name: "Check after unset"
      fail:
        msg: "Expected value {{ new }} not in {{ services.test_service.multi_state }}"
      when: "{{ new in services.test_service.multi_state }}"
      tags:
        - service-check-again

    # component
    - name: "Check value before change"
      fail:
        msg: "Expected value should not contain {{ new }}"
      when: "{{ new in services.test_service.test_component.multi_state }}"
      tags:
        - component-prepare

    - adcm_multi_state_set:
        type: "component"
        state: *new
      tags:
        - component-prepare

    - name: "Check value after change"
      fail:
        msg: "Expected value {{ new }} in {{ services.test_service.test_component.multi_state }}"
      when: "{{ new not in services.test_service.test_component.multi_state }}"
      tags:
        - component-check

    - adcm_multi_state_unset:
        type: "component"
        state: *new
      tags:
        - component-undo

    - name: "Check after unset"
      fail:
        msg: "Expected value {{ new }} not in {{ services.test_service.test_component.multi_state }}"
      when: "{{ new in services.test_service.test_component.multi_state }}"
      tags:
        - component-check-again
