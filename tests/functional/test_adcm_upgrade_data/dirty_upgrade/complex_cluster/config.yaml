# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
- type: cluster
  name: complex_cluster
  display_name: Complex Cluster
  version: 0.904
  license: ./license.txt
  edition: enterprise
  description: |
    This cluster has many services
    various configs, etc. etc.

  config:
    - &complexity_level
      name: complexity_level
      display_name: Complexity Level
      type: integer
      default: 4
      required: no

    - name: very_important_flag
      display_name: Set me
      type: float
      required: true

    - &country_codes
      name: country_codes
      type: structure
      yspec: ./schema.yaml
      default:
        - country: Greece
          code: 30
        - country: France
          code: 33
        - country: Spain
          code: 34

    - &a_lot_of_text
      name: a_lot_of_text
      display_name: A lot of text
      type: group
      subs:
        - name: simple_string
          type: string
          required: no
          default: "simple string here"
        - name: big_text
          type: text
          required: no
          default: ""
        - name: license
          description: "Edit license as you want :3"
          read_only: any
          type: file
          default: ./text.txt
        - name: file_pass
          type: password
          required: no

    - &from_doc
      name: from_doc
      display_name: Examples from documentation
      type: group
      ui_options:
        advanced: true
      subs:
        - name: memory_size
          type: integer
          default: 16
          min: 2
          max: 64
          ui_options:
            invinsible: true
        - name: cluster_host
          type: variant
          required: false
          source:
            type: builtin
            name: host_in_cluster
        - name: password_no_confirm
          type: password
          required: no
          ui_options:
            no_confirm: true
        - name: mount_points
          type: list
          default:
            - /dev/rdisk0s1
            - /dev/rdisk0s2
            - /dev/rdisk0s3
          read_only: any
        - name: person
          type: map
          default:
            name: Joe
            age: "24"
            sex: m
        - name: protocol
          type: option
          option: { http: "80", https: "443" }
          default: "80"

  actions:
    make_sandwich:
      display_name: "Make a sandwich"
      description: Kind of install
      type: task
      scripts:
        - &sandwich_job
          name: bread
          display_name: Get some bread
          script_type: ansible
          script: ansible/cluster.yaml
          on_fail: created
          params:
            ansible_tags: raise_complexity
        - <<: *sandwich_job
          name: sauce
          display_name: Put sauce on bread
          on_fail: bread
        - <<: *sandwich_job
          name: cheese
          display_name: Put cheese
          on_fail: sauce
      states:
        available:
          - created
          - bread
          - sauce
        on_success: sandwiched

    make_sauce:
      display_name: "Make sauce"
      type: job
      script_type: ansible
      script: ansible/cluster.yaml
      states:
        available: any
      params:
        # use state plugin on components
        ansible_tags: sauce
      hc_acl:
        - &sauce_hc
          service: sauce_service
          component: spice
          action: add
        - <<: *sauce_hc
          component: tomato
        - <<: *sauce_hc
          component: lemon

    eat_sandwich:
      display_name: "Eat sandwich"
      description: Kind of uninstall
      type: task
      scripts:
        - &eat_job
          name: bite
          display_name: Bite sandwich
          script_type: ansible
          script: ansible/cluster.yaml
          on_fail: sandwiched
          params:
            ansible_tags: lower_complexity
        - <<: *eat_job
          on_fail: bited
        - <<: *eat_job
          on_fail: almost_eaten
      states:
        available:
          - sandwiched
          - bited
          - almost_eaten
        on_success: created

- type: service
  name: cheese_service
  display_name: Cheese
  version: 1.1
  description: Cheese to put on your cluster

  config: &no_required_config
    - *from_doc
    - *a_lot_of_text
    - *complexity_level
    - *country_codes

    - name: very_important_flag
      display_name: Is cheese put
      type: float
      required: false

  actions:
    put_on_bread: &put_action
      display_name: Put on bread
      description: Kind of install
      type: job
      script_type: ansible
      script: ansible/cheese_service.yaml
      states:
        available:
          - created
        on_success: put
        on_fail: created

  components:
    milk:
      display_name: Milk
      constraint: [0, +]
      config: *no_required_config

- type: service
  name: sauce_service
  display_name: Sauce
  version: 2.4
  description: Sauce to put on your cluster

  config: *no_required_config

  actions:
    put_on_bread:
      <<: *put_action
      script: ansible/sauce_service.yaml

  components:
    spice:
      display_name: Spice
      description: The skies are blue

      config: &component-config
        - name: some_salt
          type: integer
          default: 12
          writable: [neverstate]
        - name: pepper
          type: string
          default: chilly
          read_only: any
        - name: illicium
          type: float
          required: no

      actions: &component-actions
        add_more: &add_more
          display_name: Add more spice
          type: job
          script_type: ansible
          script: ansible/component.yaml
          params:
            - ansible_tags: dummy
          states:
            available: any
            on_success: more_spicy
            on_fail: not_so_spicy_as_could_be
          host_action: false

    tomato:
      display_name: Tomato
      description: Tomatos tomahtos
      config: *component-config
      actions: *component-actions

    lemon:
      display_name: Lem.ON
      description: |
        Lemon lemon lemon
        Simon Simon Simon
      config: *component-config

      actions:
        add_more:
          <<: *add_more
          host_action: true

- type: service
  name: bread_service
  display_name: Bread
  version: 3.43
  description: Bread to put your cheese and sause on

  config: *no_required_config

  actions:
    buy_bread:
      <<: *put_action
      display_name: Go buy some bread
      script: ansible/bread_service.yaml
      states:
        available:
          - created
        on_success: put
        on_fail: created
